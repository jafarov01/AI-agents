name: PR Gemini Review
on:
  pull_request:
    types: [opened, synchronize]

jobs:
  gemini-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create PR diff
        run: git --no-pager diff origin/${{ github.event.pull_request.base.ref }}...HEAD > pr.diff || true
      - name: Call Gemini to review diff
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          MODEL: "gemini-2.5-flash"
        run: |
          DIFF=$(head -c 12000 pr.diff | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
          PAYLOAD=$(jq -nc --arg txt "You are a concise code reviewer. Review the PR diff below. List missing tests, bugs, security issues, and a short checklist:\n\n$DIFF" '{contents:[{parts:[{text:$txt}]}]}')
          RESP=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/${MODEL}:generateContent" \
            -H "Content-Type: application/json" \
            -H "X-Goog-Api-Key: $GEMINI_API_KEY" \
            -d "$PAYLOAD")
          echo "$RESP" | jq -r '.candidates[0].content.parts[0].text' > pr_review.txt
      - name: Post review as PR comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('pr_review.txt','utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "**AI PR review (Gemini)**\n\n" + body
            });
